@model AEAEBank.Models.PaymentViewModel

@{
    ViewBag.Title = "Payment";
}

@Scripts.Render("~/bundles/jqueryval")

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#MonetaryAccounts').change(function () {

                if ($("#MonetaryAccounts").val() != "") {
                    var AccountOptions = {};
                    AccountOptions.url = "/MonetaryAccount/GetAccountData";
                    AccountOptions.type = "POST";
                    AccountOptions.data = JSON.stringify({ accountId: $("#MonetaryAccounts").val() });
                    AccountOptions.datatype = "json";
                    AccountOptions.contentType = "application/json";
                    AccountOptions.success = function (account) {
                        
                        $('#AccountIBAN').val(account.AccountIban);
                        $('#Balance').val(account.amount);

                    };
                    AccountOptions.error = function () { alert("Error in Getting monetary accounts!!"); };
                    $.ajax(AccountOptions);
                }
            });

            $('#CompanyList').change(function () {
                
                if ($("#CompanyList").val() != "") {
                    var CompanyOptions = {};
                    CompanyOptions.url = "/MonetaryAccount/GetCompanyData";
                    CompanyOptions.type = "POST";
                    CompanyOptions.data = JSON.stringify({ companyID: $("#CompanyList").val() });
                    CompanyOptions.datatype = "json";
                    CompanyOptions.contentType = "application/json";
                    CompanyOptions.success = function (company) {

                        $('#BeneficiaryName').val(company.companyName);
                        $('#BeneficiaryIBAN').val(company.iban);
                        $('#BeneficiaryBankName').val(company.bankName);
                        
                    };
                    CompanyOptions.error = function () { alert("Error in Getting companies!!"); };
                    $.ajax(CompanyOptions);
                }
            });
        });

</script>


<h2>Payment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    
    <div class="form-horizontal">

        <h4>PaymentViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CompanyIndex, Model.CompanyList, "Select", new { @class = "form-control", id = "CompanyList"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("BeneficiaryName", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryIBAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("BeneficiaryIBAN", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.BeneficiaryIBAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonetaryAccounts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.MonetaryAccountIndex, Model.MonetaryAccounts, "Select", new { @class = "form-control", id = "MonetaryAccounts" })
               @Html.ValidationMessageFor(model => model.MonetaryAccounts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountIBAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("AccountIBAN", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.AccountIBAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Balance", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", id = "amount" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryBankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("BeneficiaryBankName", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.BeneficiaryBankName, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Invoice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Invoice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirm" class="btn myButton" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
