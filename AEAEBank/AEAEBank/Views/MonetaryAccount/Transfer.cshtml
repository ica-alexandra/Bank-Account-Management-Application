@model AEAEBank.Models.TransferViewModel

@{
    ViewBag.Title = "Transfer";
}

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
        $(document).ready(function () {
            $('#MonetaryAccounts').change(function () {

                if ($("#MonetaryAccounts").val() != "Select") {
                    var AccountOptions = {};
                    AccountOptions.url = "/MonetaryAccount/GetAccountData";
                    AccountOptions.type = "POST";
                    AccountOptions.data = JSON.stringify({ accountId: $("#MonetaryAccounts").val() });
                    AccountOptions.datatype = "json";
                    AccountOptions.contentType = "application/json";
                    AccountOptions.success = function (account) {

                        $('#AccountIBAN').val(account.AccountIban);
                        $('#Balance').val(account.amount);

                    };
                    AccountOptions.error = function () { alert("Error in Getting monetary accounts!!"); };
                    $.ajax(AccountOptions);
                }
            });
        });

</script>

<h2>Transfer</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TransferViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MonetaryAccounts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedValue, Model.MonetaryAccounts, new { @class = "form-control", id = "MonetaryAccounts" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountIBAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("AccountIBAN", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.AccountIBAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Balance", null, new { @readOnly = "readonly" })
                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryIBAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryIBAN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeneficiaryIBAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
